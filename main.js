(()=>{"use strict";function e(e,t){const l=e<t,s=e>=t*(t-1),i=e%t==0,n=(e+1)%t==0;return l&&i?"top-left":l&&n?"top-right":s&&i?"bottom-left":s&&n?"bottom-right":l?"top":s?"bottom":i?"left":n?"right":"center"}let t=null;function l(e){const l=function(e){const t=e**2;return Array.from({length:t/8},((e,t)=>8*t)).flatMap((e=>[e,e+1]))}(e);let s;do{s=Math.floor(Math.random()*l.length)}while(l[s]===t);return t=l[s],t}const s={auto:"auto",pointer:"pointer",crosshair:"crosshair",notallowed:"not-allowed"};const i=new class{constructor(e){this.boardSize=e,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const l=document.createElement("div");l.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`),l.addEventListener("mouseenter",(e=>this.onCellEnter(e))),l.addEventListener("mouseleave",(e=>this.onCellLeave(e))),l.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(l)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";const t=this.boardEl.children[e],l=document.createElement("div");l.classList.add("character","generic"),t.appendChild(l)}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}selectCell(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"red";this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}hideCellTooltip(e){this.cells[e].title=""}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}(4);i.bindToDOM(document.querySelector("#game-container"));const n=new class{constructor(e){this.gamePlay=e,this.indexSelect={},this.onCellClick=this.onCellClick.bind(this),this.onCellEnter=this.onCellEnter.bind(this),this.onCellLeave=this.onCellLeave.bind(this)}init(){this.events(),this.gamePlay.drawUi("prairie"),this.showCharacter()}events(){this.gamePlay.addCellEnterListener(this.onCellEnter),this.gamePlay.addCellLeaveListener(this.onCellLeave),this.gamePlay.addCellClickListener(this.onCellClick)}onCellClick(e){this.gamePlay.setCursor(s.crosshair),document.querySelector(".selected-red")&&this.gamePlay.deselectCell(this.indexSelect.red),this.gamePlay.selectCell(e),this.indexSelect.red=e}onCellEnter(){this.gamePlay.setCursor(s.pointer)}onCellLeave(e){this.gamePlay.hideCellTooltip(e)}showCharacter(){const e=setInterval((()=>{const e=l(this.gamePlay.boardSize);this.gamePlay.redrawPositions(e)}),1e3);setTimeout((()=>clearInterval(e)),1e6)}}(i);n.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,